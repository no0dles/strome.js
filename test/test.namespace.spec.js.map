{"version":3,"sources":["test/test.namespace.spec.ts"],"names":[],"mappings":";AAAA,0BAA+B,oBAAoB,CAAC,CAAA;AACpD,qBAAqB,MAAM,CAAC,CAAA;AAE5B,IAAI,OAAO,GAAG,UAAC,UAAkB,EAAE,QAAgB;IACjD,IAAI,EAAE,GAAG,IAAI,4BAAgB,CAAC,QAAQ,CAAC,CAAC;IACxC,IAAI,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;IAEjC,aAAM,CAAC,MAAM,CAAC,KAAK,EAAE,UAAU,GAAG,gBAAgB,GAAG,QAAQ,CAAC,CAAC;AACjE,CAAC,CAAC;AAEF,QAAQ,CAAC,qBAAqB,EAAE;IAC9B,EAAE,CAAC,iCAAiC,EAAE;QACpC,OAAO,CAAC,kBAAkB,EAAE,kBAAkB,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oCAAoC,EAAE;QACvC,OAAO,CAAC,kBAAkB,EAAE,gBAAgB,CAAC,CAAC;QAC9C,OAAO,CAAC,kBAAkB,EAAE,YAAY,CAAC,CAAC;QAC1C,OAAO,CAAC,kBAAkB,EAAE,eAAe,CAAC,CAAC;IAC/C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE;QACzC,OAAO,CAAC,kBAAkB,EAAE,UAAU,CAAC,CAAC;QACxC,OAAO,CAAC,kBAAkB,EAAE,SAAS,CAAC,CAAC;QACvC,OAAO,CAAC,kBAAkB,EAAE,aAAa,CAAC,CAAC;IAC7C,CAAC,CAAC,CAAC;IAGH,EAAE,CAAC,oCAAoC,EAAE;QACvC,OAAO,CAAC,kBAAkB,EAAE,SAAS,CAAC,CAAC;QACvC,OAAO,CAAC,kBAAkB,EAAE,YAAY,CAAC,CAAC;QAC1C,OAAO,CAAC,kBAAkB,EAAE,iBAAiB,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;AAEL,CAAC,CAAC,CAAC","file":"test/test.namespace.spec.js","sourcesContent":["import {MessageNamespace} from \"./../lib/namespace\";\nimport {assert} from \"chai\";\n\nvar testKey = (messageKey: string, matchKey: string) => {\n  var ns = new MessageNamespace(matchKey);\n  var match = ns.match(messageKey);\n\n  assert.isTrue(match, messageKey + \" didn't match \" + matchKey);\n};\n\ndescribe('Namespace Unit Test', () => {\n  it('should match exact the same key', () => {\n    testKey(\"test.key.message\", \"test.key.message\");\n  });\n\n  it('should match single wild char keys', () => {\n    testKey(\"test.key.message\", \"test.*.message\");\n    testKey(\"test.key.message\", \"test.key.*\");\n    testKey(\"test.key.message\", \"*.key.message\");\n  });\n\n  it('should match multiple wild char keys', () => {\n    testKey(\"test.key.message\", \"test.*.*\");\n    testKey(\"test.key.message\", \"*.key.*\");\n    testKey(\"test.key.message\", \"*.*.message\");\n  });\n\n\n  it('should match double wild char keys', () => {\n    testKey(\"test.key.message\", \"test.**\");\n    testKey(\"test.key.message\", \"**.message\");\n    testKey(\"test.key.message\", \"test.**.message\");\n  });\n\n});"],"sourceRoot":"/source/"}